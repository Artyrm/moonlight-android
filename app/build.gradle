apply plugin: 'com.android.application'

android {
    ndkVersion "27.0.12077973"

    compileSdk 34

    namespace 'com.limelight'

    defaultConfig {
        minSdk 21
        targetSdk 34

        versionName "12.1"
        versionCode = 314

        // Generate native debug symbols to allow Google Play to symbolicate our native crashes
        ndk.debugSymbolLevel = 'FULL'
    }

    flavorDimensions.add("root")

    buildFeatures {
        buildConfig = true
    }

    // --- ДОБАВЛЕНО: Конфигурация подписи ---
    signingConfigs {
        debug {
            // Используем переданные свойства или переменные окружения,
            // или стандартные пути/пароли как fallback
            storeFile file(project.findProperty('debugStoreFile') ?: System.getenv('DEBUG_STORE_FILE') ?: System.getProperty('user.home') + '/.android/debug.keystore')
            storePassword project.findProperty('debugStorePassword') ?: System.getenv('DEBUG_STORE_PASSWORD') ?: 'android'
            keyAlias project.findProperty('debugKeyAlias') ?: System.getenv('DEBUG_KEY_ALIAS') ?: 'androiddebugkey'
            keyPassword project.findProperty('debugKeyPassword') ?: System.getenv('DEBUG_KEY_PASSWORD') ?: 'android'
        }
        // release {
        //     // Здесь могла бы быть ваша конфигурация для релизной подписи
        //     // storeFile file(...)
        //     // storePassword ...
        //     // keyAlias ...
        //     // keyPassword ...
        // }
    }
    // --- КОНЕЦ ДОБАВЛЕНИЯ ---

    productFlavors {
        root {
            maxSdk 25
            externalNativeBuild {
                ndkBuild {
                    arguments "PRODUCT_FLAVOR=root"
                }
            }
            applicationId "com.limelight.root"
            dimension "root"
            buildConfigField "boolean", "ROOT_BUILD", "true"
        }
        nonRoot {
            externalNativeBuild {
                ndkBuild {
                    arguments "PRODUCT_FLAVOR=nonRoot"
                }
            }
            applicationId "com.limelight"
            dimension "root"
            buildConfigField "boolean", "ROOT_BUILD", "false"
        }
    }

    compileOptions {
        encoding "UTF-8"
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    lint {
        disable 'MissingTranslation'
        lintConfig file('lint.xml')
    }

    bundle {
        language {
            enableSplit = false
        }
        density {
            enableSplit = false
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            resValue "string", "app_label", "Moonlight (Debug)"
            resValue "string", "app_label_root", "Moonlight (Root Debug)"

            minifyEnabled true // Оставляем как есть, хотя для debug это странно
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            // --- ДОБАВЛЕНО: Указываем использовать debug signing config ---
            signingConfig signingConfigs.debug
            // --- КОНЕЦ ДОБАВЛЕНИЯ ---
        }
        release {
            applicationIdSuffix ".unofficial"
            resValue "string", "app_label", "Moonlight"
            resValue "string", "app_label_root", "Moonlight (Root)"

            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            // signingConfig signingConfigs.release // Раскомментировать, если есть релизная конфигурация
        }
    }

    externalNativeBuild {
        ndkBuild {
            path "src/main/jni/Android.mk"
        }
    }
}

dependencies {
    implementation 'org.bouncycastle:bcprov-jdk18on:1.77'
    implementation 'org.bouncycastle:bcpkix-jdk18on:1.77'
    implementation 'org.jcodec:jcodec:0.2.5'
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'
    implementation 'org.jmdns:jmdns:3.5.9'
    implementation 'com.github.cgutman:ShieldControllerExtensions:1.0.1'
}
